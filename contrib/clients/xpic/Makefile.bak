# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.37 88/10/08 20:08:30 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

###########################################################################
# X Window System Makefile generated from template file Imake.tmpl
# $XConsortium: Imake.tmpl,v 1.91 88/10/23 22:37:10 jim Exp $
#
# Do not change the body of the imake template file.  Server-specific
# parameters may be set in the appropriate .macros file; site-specific
# parameters (but shared by all servers) may be set in site.def.  If you
# make any changes, you'll need to rebuild the makefiles using
# "make World" (at best) or "make Makefile; make Makefiles" (at least) in
# the top level directory.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit Sun.macros to change

# platform:  $XConsortium: Sun.macros,v 1.52 88/10/23 11:00:55 jim Exp $
# operating system:  SunOS 4.0

BOOTSTRAPCFLAGS =
             AS = as
             CC = cc
            CPP = /lib/cpp
             LD = ld
           LINT = lint
        INSTALL = install
           TAGS = ctags
             RM = rm -f
             MV = mv
             LN = ln -s
         RANLIB = ranlib
RANLIBINSTFLAGS = -t
             AR = ar clq
             LS = ls
       LINTOPTS = -axz
    LINTLIBFLAG = -C
           MAKE = make
STD_CPP_DEFINES =
    STD_DEFINES =

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.16 88/10/12 10:30:24 jim Exp $

 XWSRC = $(CONTRIBSRC)/widgets/Xhp/Xw

 XWLIB = $(USRLIBDIR)/libXw.a

###########################################################################
# definitions common to all Makefiles - do not edit

          SHELL = /bin/sh

        DESTDIR =
      USRLIBDIR = /tmp/ftp/usr/lib-sun4
         BINDIR = /local/bin/X11
         INCDIR = /tmp/ftp/usr/include
        INCROOT = $(DESTDIR)/usr/include
         ADMDIR = /var/scr/Xerrors
         LIBDIR = /tmp/ftp/usr/lib
     LINTLIBDIR = $(LIBDIR)/lint
        FONTDIR = $(LIBDIR)/fonts
       XINITDIR = $(LIBDIR)/xinit
         XDMDIR = $(LIBDIR)/xdm
         UWMDIR = $(LIBDIR)/uwm
         AWMDIR = $(LIBDIR)/awm
         TWMDIR = $(LIBDIR)/twm
        MANPATH = /local/man
  MANSOURCEPATH = $(MANPATH)/man
         MANDIR = $(MANSOURCEPATH)x
      LIBMANDIR = $(MANSOURCEPATH)3
    XAPPLOADDIR = $(LIBDIR)/app-defaults

   INSTBINFLAGS = -m 0755
   INSTUIDFLAGS = -m 4755
   INSTLIBFLAGS = -m 0664
   INSTINCFLAGS = -m 0444
   INSTMANFLAGS = -m 0444
   INSTAPPFLAGS = -m 0444
  INSTKMEMFLAGS = -g kmem -m 2755
        FCFLAGS = -t
    CDEBUGFLAGS = -O

        PATHSEP = /
         DEPEND = $(DEPENDSRC)/makedepend
          IMAKE = $(BINDIR)/imake
            RGB = $(RGBSRC)/rgb
             FC = $(BDFTOSNFSRC)/bdftosnf
      MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
      MKDIRHIER = $(SCRIPTSSRC)/mkdirhier.sh

         CFLAGS = $(CDEBUGFLAGS) $(INCLUDES) $(STD_DEFINES) $(DEFINES)
      LINTFLAGS = $(LINTOPTS) $(INCLUDES) $(STD_DEFINES) $(DEFINES) -DLINT
        LDFLAGS = $(CDEBUGFLAGS) $(SYS_LIBRARIES) $(SYSAUX_LIBRARIES)
            TOP = ../..
      CLIENTSRC = $(TOP)/clients
        DEMOSRC = $(TOP)/demos
         LIBSRC = $(TOP)/lib
        FONTSRC = $(TOP)/fonts
     INCLUDESRC = $(TOP)/X11
      SERVERSRC = $(TOP)/server
        UTILSRC = $(TOP)/util
     SCRIPTSSRC = $(UTILSRC)/scripts
     EXAMPLESRC = $(TOP)/examples
     CONTRIBSRC = $(TOP)/contrib
         DOCSRC = $(TOP)/doc
         RGBSRC = $(TOP)/rgb
      DEPENDSRC = $(UTILSRC)/makedepend
       IMAKESRC = $(UTILSRC)/imake
       IRULESRC = $(UTILSRC)/imake.includes
        XLIBSRC = $(LIBSRC)/X
         XMUSRC = $(LIBSRC)/Xmu
     TOOLKITSRC = $(LIBSRC)/Xt
     AWIDGETSRC = $(LIBSRC)/Xaw
     OLDXLIBSRC = $(LIBSRC)/oldX
    BDFTOSNFSRC = $(FONTSRC)/bdftosnf
   MKFONTDIRSRC = $(FONTSRC)/mkfontdir
   EXTENSIONSRC = $(TOP)/extensions

   EXTENSIONLIB = $(USRLIBDIR)/lib/libXext.a

           XLIB = -L$(USRLIBDIR) -lX11

         XMULIB = $(USRLIBDIR)/libXmu.a
        OLDXLIB = $(USRLIBDIR)/liboldX.a
       XTOOLLIB = $(USRLIBDIR)/libXt.a
         XAWLIB = $(USRLIBDIR)/libXaw.a
       INCLUDES = -I$(INCDIR) -I$(INCROOT)

       LINTXLIB = $(XLIBSRC)/llib-lX11.ln
        LINTXMU = $(XMUSRC)/llib-lXmu.ln
      LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
        LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln
      MACROFILE = Sun.macros
   ICONFIGFILES = $(IRULESRC)/Imake.tmpl \
			$(IRULESRC)/$(MACROFILE) $(IRULESRC)/site.def
  IMAKE_DEFINES =
      IMAKE_CMD = $(IMAKE) -TImake.tmpl -I$(NEWTOP)$(IRULESRC) \
			-s Makefile $(IMAKE_DEFINES)
         RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
			.emacs_* tags TAGS make.log MakeOut

###########################################################################
# rules:  $XConsortium: Imake.rules,v 1.71 88/10/23 22:46:34 jim Exp $

###########################################################################
# start of Imakefile

# Where are the HP widgets - this is used with a -I option. If you have them
# installed.
#XWSRC=$(CONTRIBSRC)/widgets/Xhp
#XWINC=-I$(XWSRC)

# Note - You need the HP widgets (Xw) for the X11 Toolkit
# These should be defined in an Imake.tmpl - except that the
# normal Imake.tmpl insists on these being compiled in the
# X directory tree.
#XWLIB=$(XWSRC)/Xw/libXw.a
XWLIB=$(USRLIBDIR)/libXw.a

# The documents go in $(DOCDIR)/xpic - see the install target.
# At CSRI, we use a logical link to the source, so we don't
# install this. You must still keep this accurate, because
# it's put into the man page. Change the install target appropriately.
DOCDIR=/local/doc/X11
# the directory in which xpic saves the current buffer
# in case it dies on a signal
DUMPDIR=/tmp

# -DXWINDOWS is used by the filename completion code is ask.c and util.c
# to include the Xos.h header file if compiled in an X program for
# greater portability.
# -DMAGIC will include code that puts a '#! $(BINDIR)/xpic'
# header on the saved xpic files, and make them executable, so
# you can just execute the saved xpic file and it starts up
# xpic.
# -DFASTARCS means your X server can draw arcs fast. Do *NOT* define this
# for the MIT R3 sample server running on anything less than a
# MIPS-based workstation.
# -DDEBUG turns on debugging output - do you really want that?!
# -DDRAWBBOX is also for debugging - it draws the bounding box
# of all gels.
# -DGRAB should be defined if XtAddGrab and XtRemoveGrab can be
# made to work in Minibuf.c and input.c - I can't seem to get them
# to work.
# -DTYPEOUT includes the typeout code
DEFINES = -DXWINDOWS -DMAGIC -DTYPEOUT # -DDEBUG

# Define USLEEP if your system lacks a usleep (eg) Ultrix.
USLEEP=usleep.o

########################################################################
# You should not have to modify the rest of this file

CDEBUGFLAGS = -O
INCLUDES =  $(XWINC) -Ibitmaps $(INLINELIBM) -I$(INCDIR) -I$(INCROOT)
XPICLIBDIR=$(LIBDIR)/xpic

# Sigh - we use sin(), cos(), atan2() for arrow, and for ellipses
# If inlining is chosen (see INLINELIBM), then the mathlib on won't be
# used, saving a whopping 55K on Suns.
MATHLIB=-lm

# /usr/lib/debug/malloc.o is Sun's debugging malloc() - it
# provides the malloc_debug() and malloc_verify() calls.
# malloc.o is a first-fit malloc with debugging ASSERTs. Finds
# heap corruption fast. Not defining this will use libc.
#MALLOC = /usr/lib/debug/malloc.o
#MALLOC = malloc.o
MALLOC =

OBJS1 = main.o windows.o xpic.o handlers.o input.o  \
	event.o grid.o error.o spline.o arrow.o newfonts.o \
	util.o gels.o null.o obj_line.o obj_spline.o obj_text.o \
	obj_box.o obj_circ.o obj_ell.o obj_block.o obj_elem.o \
	updown.o text.o isqrt.o ask.o xtypeout.o Minibuf.o Window.o \
	arc.o box.o focus.o line.o xfname.o $(USLEEP)

SRCS1 = main.c windows.c xpic.c handlers.c input.c  \
	event.c grid.c error.c spline.c arrow.c newfonts.c \
	util.c gels.c null.c obj_line.c obj_spline.c obj_text.c \
	obj_box.c obj_circ.c obj_ell.c obj_block.c obj_elem.c \
	updown.c text.c isqrt.c ask.c xtypeout.c Minibuf.c Window.c \
	arc.c box.c focus.c line.c xfname.c

OBJS2 = x2pic.o hash.o
SRCS2 = x2pic.c hash.c

OBJS3 = x2ps.o hash.o
SRCS3 = x2ps.c hash.c

OBJS4 = x2tpic.o xtp.o hash.o
SRCS4 = x2tpic.c xtp.c hash.c

PROGRAMS = xpic x2ps x2pic x2tpic

.SUFFIXES: .manX .man

.manX.man:
	sed -e 's?DOCDIR?$(DOCDIR)/xpic?g'\
	    -e 's?XPICLIBDIR?$(XPICLIBDIR)?g' $*.manX > $*.man

 OBJS = $(OBJS1) $(OBJS2) $(OBJS3)
 SRCS = $(SRCS1) $(SRCS2) $(SRCS3)

all:: $(PROGRAMS)

xpic: $(OBJS1) $(MYXTSTUFF) $(MALLOC) $(XWLIB) $(XTOOLLIB) $(XLIB)
	$(RM) $@
	$(CC) -o $@ $(OBJS1) $(MYXTSTUFF) $(MALLOC) $(XWLIB) $(XTOOLLIB) $(XLIB) $(LDFLAGS) $(MATHLIB) $(SYSLAST_LIBRARIES)

install:: xpic
	$(INSTALL) -c $(INSTALLFLAGS) xpic $(BINDIR)

install.man:: xpic.man
	$(INSTALL) -c $(INSTMANFLAGS) xpic.man $(MANDIR)/xpic.x

relink::
	$(RM) $(PROGRAMS)
	$(MAKE) $(MFLAGS) $(PROGRAMS)

depend:: $(DEPEND)

depend::
	$(DEPEND) -s "# DO NOT DELETE" -- $(CFLAGS) -- $(SRCS)

$(DEPEND)::

clean::
	$(RM) $(PROGRAMS)

SRCS = $(SRCS1) $(SRCS2) $(SRCS3) $(SRCS4)

x2pic: $(OBJS2)
	$(RM) $@
	$(CC) -o $@ $(OBJS2)  $(LDFLAGS)  $(SYSLAST_LIBRARIES)

relink::
	$(RM) x2pic
	$(MAKE) $(MFLAGS) x2pic

clean::
	$(RM) x2pic

install:: x2pic
	$(INSTALL) -c $(INSTALLFLAGS) x2pic  $(BINDIR)

install.man:: x2pic.man
	$(INSTALL) -c $(INSTMANFLAGS) x2pic.man  $(MANDIR)/x2pic.x

x2ps: $(OBJS3)
	$(RM) $@
	$(CC) -o $@ $(OBJS3)  $(LDFLAGS) $(MATHLIB) $(SYSLAST_LIBRARIES)

relink::
	$(RM) x2ps
	$(MAKE) $(MFLAGS) x2ps

clean::
	$(RM) x2ps

install:: x2ps
	$(INSTALL) -c $(INSTALLFLAGS) x2ps  $(BINDIR)

install.man:: x2ps.man
	$(INSTALL) -c $(INSTMANFLAGS) x2ps.man  $(MANDIR)/x2ps.x

x2tpic: $(OBJS4)
	$(RM) $@
	$(CC) -o $@ $(OBJS4)  $(LDFLAGS)  $(SYSLAST_LIBRARIES)

relink::
	$(RM) x2tpic
	$(MAKE) $(MFLAGS) x2tpic

clean::
	$(RM) x2tpic

install:: x2tpic
	$(INSTALL) -c $(INSTALLFLAGS) x2tpic  $(BINDIR)

install.man:: x2tpic.man
	$(INSTALL) -c $(INSTMANFLAGS) x2tpic.man  $(MANDIR)/x2tpic.x

install:: x2tex.script
	$(INSTALL) -c $(INSTALLFLAGS) x2tex.script  $(BINDIR)/x2tex

install.man:: x2tex.man
	$(INSTALL) -c $(INSTMANFLAGS) x2tex.man  $(MANDIR)/x2tex.x

lint:
	(lint -abz $(SRCS1) -lXw -lXt -lX11 -lm $(LINTFLAGS); \
	lint -abz $(SRCS2) $(LINTFLAGS); \
	lint -abz $(SRCS3) -lm $(LINTFLAGS); \
	lint -abz $(SRCS4) $(LINTFLAGS)) | \
	./xlint

clean::
	$(RM) tune.h.new xpic.man x2ps.man x2pic.man x2tpic.man x2tex.man

id: tags
	mkid *.[ch]

install::
	-mkdir $(XPICLIBDIR)
	$(INSTALL) -c $(INSTAPPFLAGS) x2ps.pro $(XPICLIBDIR)
	$(INSTALL) -c $(INSTAPPFLAGS) x2ps.tra $(XPICLIBDIR)
	-mkdir $(XPICLIBDIR)/fontdesc
	$(INSTALL) -c $(INSTAPPFLAGS) fontdesc/xpic $(XPICLIBDIR)/fontdesc
	$(INSTALL) -c $(INSTAPPFLAGS) fontdesc/x2pic $(XPICLIBDIR)/fontdesc
	$(INSTALL) -c $(INSTAPPFLAGS) fontdesc/x2tpic $(XPICLIBDIR)/fontdesc
	$(INSTALL) -c $(INSTAPPFLAGS) fontdesc/x2ps $(XPICLIBDIR)/fontdesc

install::
	-rm -r $(DOCDIR)/xpic
	-cp -r doc $(DOCDIR)/xpic

tar:
	cd ..; tar cvfX - xpic/ExcludeFiles xpic | compress > xpic.tar.Z

tune.h: Makefile
	echo \#define LIBDIR \"$(XPICLIBDIR)\" > tune.h.new
	echo \#define PROGRAMNAME \"$(BINDIR)/xpic\" >> tune.h.new
	echo \#define DUMPDIR \"$(DUMPDIR)\" >> tune.h.new
	-cmp -s tune.h.new tune.h || cp tune.h.new tune.h

###########################################################################
# Imake.tmpl common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile:: $(IMAKE)

Makefile:: Imakefile \
	$(IRULESRC)/Imake.tmpl \
	$(IRULESRC)/Imake.rules \
	$(IRULESRC)/site.def \
	$(IRULESRC)/$(MACROFILE)
	-@if [ -f Makefile ]; then \
	echo "$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP)

$(IMAKE):

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

$(XLIB)::;
-L$(USRLIBDIR)::;
-L$(LIBSRC)/Xpic::;

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install done"

install.man::
	@echo "install.man done"

Makefiles::

###########################################################################
# dependencies generated by makedepend

