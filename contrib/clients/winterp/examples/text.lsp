; -*-Lisp-*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; File:         text.lsp
; RCS:          $Header: text.lsp,v 1.1 89/11/25 04:00:44 mayer Exp $
; Description:  Random experiments with the Motif text editor widget.
; Author:       Niels Mayer, HPLabs
; Created:      Sat Nov 25 01:30:56 1989
; Modified:     Sat Nov 25 01:32:07 1989 (Niels Mayer) mayer@hplnpm
; Language:     Lisp
; Package:      N/A
; Status:       X11r4 contrib tape release
;
; (c) Copyright 1989, Hewlett-Packard Company.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq te_w (send XM_TEXT_WIDGET_CLASS :new :managed :scrolled rc_w
		 :XMN_EDIT_MODE :MULTI_LINE_EDIT
		 :XMN_HEIGHT 400
		 :XMN_WIDTH  300
		 ))

(send te_w :GET_STRING)
(send te_w :GET_LAST_POSITION)
(send te_w :SET_STRING
      "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789")
(send te_w :REPLACE 3 7 "XXX")
(send te_w :GET_EDITABLE)
(send te_w :SET_EDITABLE nil)
(send te_w :SET_EDITABLE t)
(send te_w :GET_MAX_LENGTH)
(send te_w :SET_MAX_LENGTH 9999999)
(send te_w :GET_SELECTION)
(send te_w :SET_SELECTION 3 7)
(send te_w :CLEAR_SELECTION)
(send te_w :GET_TOP_POSITION)
(send te_w :SET_TOP_POSITION 0)
(send te_w :GET_INSERTION_POSITION)
(send te_w :SET_INSERTION_POSITION 202)
(send te_w :SET_INSERTION_POSITION (send te_w :XY_TO_POS 40 100))
(send te_w :GET_SELECTION_POSITION)
(send te_w :XY_TO_POS 40 100)		;weird? x,y values are in pixels!
(send te_w :POS_TO_XY (send te_w :GET_INSERTION_POSITION))
(send te_w :SHOW_POSITION 111)
(send te_w :SCROLL -5)
(send te_w :DISABLE_REDISPLAY t)
(send te_w :ENABLE_REDISPLAY)

(defun find-file (file)
  (let*
      (;; loc vars
       (top_w
	(send TOP_LEVEL_SHELL_WIDGET_CLASS :new 
	      :XMN_GEOMETRY "500x500+1+1"
	      :XMN_TITLE file
	      :XMN_ICON_NAME file
	      ))
       (te_w
	(send XM_TEXT_WIDGET_CLASS :new :managed :scrolled "text" top_w
	      :XMN_EDIT_MODE :MULTI_LINE_EDIT    
	      :xmn_font_list "hp8.10x20b"
	      ))
       (fp
	(open file :direction :input)
	)
       inspos
       text_line
       )


    (if (null fp)
	(error "Can't open file." file))

    (send te_w :replace 0 0 (read-line fp))

    (loop
     (if (null (setq text_line (read-line fp)))
	 (return))
     (setq inspos (send te_w :get_insertion_position))
     (send te_w :replace inspos inspos (strcat "\n" text_line))
     )
    (close fp)
    (send top_w :realize)
    te_w				;return value
    )
  )


(setq tw (find-file "/users/mayer/.login"))

(send tw :set_callback :xmn_modify_verify_callback
      '(CALLBACK_WIDGET
	CALLBACK_REASON
	CALLBACK_XEVENT
	CALLBACK_CUR_INSERT
	CALLBACK_NEW_INSERT
	CALLBACK_START_POS
	CALLBACK_END_POS)
      '(
	(format T "widget=~A\nreason=~A\nxevent=~A\n" 
		CALLBACK_WIDGET	CALLBACK_REASON	CALLBACK_XEVENT)
	(format T "cur_insert=~A\nnew_insert=~A\n" 
		CALLBACK_CUR_INSERT CALLBACK_NEW_INSERT)
	(format T "start_pos=~A\nend_pos=~A\n"
		CALLBACK_START_POS CALLBACK_END_POS)
	))

(send tw :set_callback :xmn_motion_verify_callback
      '(CALLBACK_WIDGET
	CALLBACK_REASON
	CALLBACK_XEVENT
	CALLBACK_CUR_INSERT
	CALLBACK_NEW_INSERT
	CALLBACK_START_POS
	CALLBACK_END_POS)
      '(
	(format T "widget=~A\nreason=~A\nxevent=~A\n" 
		CALLBACK_WIDGET	CALLBACK_REASON	CALLBACK_XEVENT)
	(format T "cur_insert=~A\nnew_insert=~A\n" 
		CALLBACK_CUR_INSERT CALLBACK_NEW_INSERT)
	(format T "start_pos=~A\nend_pos=~A\n"
		CALLBACK_START_POS CALLBACK_END_POS)
	))

(send tw :set_callback :xmn_value_changed_callback
      '(CALLBACK_WIDGET
	CALLBACK_REASON
	CALLBACK_XEVENT
	CALLBACK_CUR_INSERT
	CALLBACK_NEW_INSERT
	CALLBACK_START_POS
	CALLBACK_END_POS)
      '(
	(format T "widget=~A\nreason=~A\nxevent=~A\n" 
		CALLBACK_WIDGET	CALLBACK_REASON	CALLBACK_XEVENT)
	(format T "cur_insert=~A\nnew_insert=~A\n" 
		CALLBACK_CUR_INSERT CALLBACK_NEW_INSERT)
	(format T "start_pos=~A\nend_pos=~A\n"
		CALLBACK_START_POS CALLBACK_END_POS)
	))

(send tw :set_callback :xmn_focus_callback
      '(CALLBACK_WIDGET
	CALLBACK_REASON
	CALLBACK_XEVENT
	CALLBACK_CUR_INSERT
	CALLBACK_NEW_INSERT
	CALLBACK_START_POS
	CALLBACK_END_POS)
      '(
	(format T "widget=~A\nreason=~A\nxevent=~A\n" 
		CALLBACK_WIDGET	CALLBACK_REASON	CALLBACK_XEVENT)
	(format T "cur_insert=~A\nnew_insert=~A\n" 
		CALLBACK_CUR_INSERT CALLBACK_NEW_INSERT)
	(format T "start_pos=~A\nend_pos=~A\n"
		CALLBACK_START_POS CALLBACK_END_POS)
	))

(send tw :set_callback :xmn_losing_focus_callback
      '(CALLBACK_WIDGET
	CALLBACK_REASON
	CALLBACK_XEVENT
	CALLBACK_CUR_INSERT
	CALLBACK_NEW_INSERT
	CALLBACK_START_POS
	CALLBACK_END_POS)
      '(
	(format T "widget=~A\nreason=~A\nxevent=~A\n" 
		CALLBACK_WIDGET	CALLBACK_REASON	CALLBACK_XEVENT)
	(format T "cur_insert=~A\nnew_insert=~A\n" 
		CALLBACK_CUR_INSERT CALLBACK_NEW_INSERT)
	(format T "start_pos=~A\nend_pos=~A\n"
		CALLBACK_START_POS CALLBACK_END_POS)
	))
