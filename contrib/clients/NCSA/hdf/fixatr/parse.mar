	.title	parse
;
;	Procedure to get FID, DID and result filename of a given file.
;	Follows the VMS procedure calling standard, CALL_G.
;	
;	Calling procedure:
;
;		retstat=parse(filename,FID,DID,result_str,device_name)
;		
;		arguments : filename passed by desc
;			    FID an array of 3 two-byte words
;			    DID an array of 3 two-byte words
;			    result_str fully specified actual file name
;;			    device_name of file
;
;	Helen Chen (DECsws)	11/28/83
;
	.library	/sys$library:lib.mlb/
	$namdef			;name block definitions


	.psect	data,noexe,wrt
fab_blk:
	$fab	fop=nam,-	;use name block option
		nam=nam_blk	;name block address
nam_blk:
	$nam	rsa=res_str,-		;result buffer address
		rss=nam$c_maxrss,-	;result buffer size
		esa=exp_str,-		;expanded buffer address
		ess=nam$c_maxrss	;expanded buffer size
exp_str:				;expanded string buffer
	.blkb	nam$c_maxrss		
res_str:				;result string buffer
	.blkb	nam$c_maxrss

filename=4
fid=8
did=12
result_str=16
;device_name=20
	.psect	code,exe,nowrt
	.entry	parse,^m<r3,r4,r5,r6,r7>		
	movl	filename(ap),r3		;r3 points to filename desc
;	movaw	fid_blk,r4		;r5 points to DID
;	movaw	did_blk,r5
	$fab_store	fab=fab_blk,-	;Store input
			fna=@4(r3),-	;file name
			fns=(r3)	;size

;
;	Perform initial parse to set up RMS context for
;	subsequent search.
;

	$parse	fab=r0			;parse the file spec
	blbc	r0,exit			;quit on error
;
;	Search for a file.
;
	$search	fab=fab_blk		;find a file
	blbc	r0,exit		;any found?
;
;	Return the FID and DID values from the search operation
;
	movaw	nam_blk,r6		;r6 points to nam_blk
	movl	fid(ap),r4		;r4 points to FID 
	movl	did(ap),r5    		;r5 points to DID
	movw	nam$w_fid(r6),(r4)	;move fid (6 bytes)
	movw	nam$w_fid+2(r6),2(r4)	;
	movw	nam$w_fid+4(r6),4(r4)	;
	movw	nam$w_did(r6),(r5)	;move did (6 bytes)
	movw	nam$w_did+2(r6),2(r5)	;
	movw	nam$w_did+4(r6),4(r5)	;
	moval	nam_blk,r6		;get address of nam block to r6
	movl	result_str(ap),r7	;r7 points to result_str
	movc5	nam$b_rsl(r6),-		;ret result filename to 
		res_str,#32,(r7),@4(r7)	;fortran program
;	movl	device_name(ap),r7	;r7 points to device_name
;	movc5	nam$b_dev(r6),-		;return device name to fortran program
;		@nam$l_dev(r6),#32,(r7),@4(r7)
	movl	#1,r0			;normal completion
exit:	ret
	.end
