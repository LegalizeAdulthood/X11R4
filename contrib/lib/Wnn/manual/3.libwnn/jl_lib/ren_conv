JL_REN_CONV( )

名称

	jl_ren_conv		連文節変換する。

形式

	#include "jllib.h"

	int
	jl_ren_conv(buf, yomi, bun_no, bun_no2, use_maep)
	struct wnn_buf *buf;		/* バッファ */
	wchar_t *yomi;			/* 読み */
	int bun_no;			/* 文節番号1 */
	int bun_no2;			/* 文節番号2 */
	int use_maep;			/* 前後の接続を使う/否 */

機能

	文節番号1 bun_no から 文節番号 bun_no2 の前までの文節を削除し、読み yomi 
	を連文節変換した結果を挿入する。

	use_maep で前後の接続の指定をする。

	WNN_USE_MAE ならば、文節番号1の前の小文節との接続を考慮して変換を行なう。
	すなわち、最前端の文節として、前の小文節と接続して大文節を作るような
	小文節は最優先され、つぎに、文節の前が大文節の区切りとなるような
	小文節が優先され、最後に、大文節の区切りとならない文節が優先される。
	WNN_USE_MAE が立っていない場合には、最前端の文節の前が大文節の区切りとな
	るような文節のみを選択する。

	WNN_USE_ATO ならば、後ろへの接続を見る。

	WNN_USE_ZENGO なら、前後両方とも見る。
	WNN_USE_ATO が立っている時には、後ろの文節とつながって大文節を構成する
	ような小文節しか、終端の文節として取られない。

	標準的には、WNN_USE_MAE を使うことをお勧めする。

	文節番号1 = 文節番号2 の時は、文節番号1 の前の位置に変換結果が挿入さ
	れる。文節番号1 が文節数と等しい時は、現在の変換結果に読みを変換した結
	果を付け加える。文節番号2 が文節数と等しい時は、文節番号1 から 後ろの
	文字列を「読み」に置き換えて、変換し直す。文節番号2 = -1 の時は、文節
	番号2 = 文節数 として、jl_ren_conv を行なう。

リターンバリュー

	正常終了時には文節数を返す。
	異常終了時には -1 を返す。

