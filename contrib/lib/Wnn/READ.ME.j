
●	Ｗｎｎ仮名漢字変換システム バージョン4.0

Ｗｎｎ仮名漢字変換システムは、京都大学数理解析研究所、立石電機株式会社、
株式会社アステックの３者によって開発されたネットワーク仮名漢字変換シス
テムです。

これは、Ｗｎｎ仮名漢字変換システムのバージョン4.0です。バージョン３以前
のシステムとは、大幅に異なっています。差異の詳細については、manual/intro
を読んで下さい。

今回のリリースでは、以下の機械で動作が確認されています。

SUN3 SUN4 の OS3.4, OS4.0

OMRON SX9100 の UniOS-B (4.3BSD)
OMRON SX9100 の UniOS-U (SystemV R2.1) (DT DS M90)




●	インストール

 ソースファイルには、リテラル文字列、および、コメントが、ECUコードで書かれて
 います。コンパイルの際には、8ビットが通るコンパイラで、make して下さい。

 ・Makefile で、make

 コンパイル時には、トップレベルの MAKEFILE を書き換えて下さい。

 SUN 用には、(Makefile.sun)
 DEFS = DEFS='-O -SUB'
 LIBS = LIB_TERM='-ltermcap'
 GLIB = GETOPTLIB=

 LUNA BSD 用には、(Makefile.luna)
 DEFS = DEFS='-O -20 -f -DSX9100BSD'
 LIBS = LIB_TERM='-ltermcap'
 GLIB = GETOPTLIB='../jlib/libgetopt.a'

 LUNA SYSV 用には、(Makefile.sx)
 DEFS = DEFS='-O -Zs -DSX8870'
 LIBS = LIB_TERM='-lcurses'
 GLIB = GETOPTLIB=
 として下さい。

 また、wchar_t が typedef されているマシンでは、DEFS に、-DWCHAR_T を加えてください。(NECのEWS4800, Toshiba AS3000など)

 
 トップレベルの Makefile に BINDIR, LIBDIR, PUBDIC_DIR というあります。これは、
 jserver, uum, 辞書ユーティリティなどのコマンド(BINDIR)、設定ファイル(LIBDIR)、
 Ｐｕｂｄｉｃ(PUBDIC_DIR)が、インストールされるディレクトリーです。
 だだし、LIBDIR は、include/config.h に、パス名が書かれていますので、これだけ変
 えても動きません。
 デフォルトでは、それぞれ、/usr/local/bin/Wnn4, /usr/local/lib/wnn,
 /usr/local/lib/wnn/dic/pubdic になっています。

 jserver/Makefile には、JSERVER_OWNER という変数があります。これは、
 jserver をどのユーザの権限で動かすか指定します。バージョン3まででは、
 jserver は、root の権限で動かしていたのですが、root で動かすのは危険性
 が高いため、wnn 用のユーザを作って、その権限で jserver だけは動かすこ
 とを推奨します。
 デフォルトでは、wnn になっています。

 jserver は、JSERVER_OWNER のオーナで、sビットが立っている必要があります。
 make および make install は、JSERVER_OWNER で、実行するのがいいでしょう。

 また、jslib の下に、WNNLIBDIR、WNNINCDIR といった変数があります。これ
 らは、それぞれ、libwnn.a 、インクルードファイルをインストールするディ
 レクトリを指定します。このように、インストール時の設定は、それぞれのレ
 ベルのMakefile に散らばっていますので、目を通して下さい。

 uum は、オーナが root で、 sビットが立っている必要があります。

 make install を、実行すると、インストールに必要なディレクトリが、ない場合は、
 ディレクトリを作るようにメッセージを出して終了しますので、作って下さい。
 作成した他、ディレクトリには、write パーミッションが必要です。

 また、uum のオーナをroot にするために、root のパスワードを聞いてきますので、
 入力して下さい。

 make install をすると、jserver, uum, 辞書ユーティリティなどのコマンドは、
 /usr/local/bin/Wnn4/ に、
 設定ファイルは、/usr/local/bin/wnn に、
 辞書は、/usr/local/lib/wnn/dic に、それぞれできます。
 今まで、使っていた、/usr/local/lib/dic, /usr/local/lib/jd は、使用しません。

 jserver の実行時に、/usr/local/lib/wnn/dic の read/write パーミッションが必要です。

 それでは、サーチパスに、/usr/local/bin/Wnn4 を追加して、jserver および、uum 
 を使ってみて下さい。

 ・Imakefile で、make

 X-Window の Imake が使える環境のサイトでは、東芝稲葉さんの御好意で、
 Imakefile が、用意されています。
	    Special thanks to Mr.Inaba @ Toshiba

 Imake を使って make するためには、ディレクトリ Wnn を
 contrib/lib/Wnn に置いて下さい。

    トップレベルの WnnImake.defs を 書き換えて下さい。
    SUN 用には
    #defined WNNSUN 1

    LUNA BSD 用には
    #defined WNNSX9100BSD 1

    LUNA SYSV 用には
    #defined WNNSX8870 1 (出荷時はこれになっています。)
    
    その後、トップレベルで
    make Makefile Makefiles
    を行なって下さい。

    LUNA SYSVあるいはLUNA BSD の場合、imake の環境も用意していますので、imake を
    実行する前に以下のことを行なって下さい。
   (1)ディレクトリ Wnn/imakeの下に、imake.patch がありますので、オリジナルの 
      imake.c に パッチを当てて下さい。その後、imake をメークして下さい。
      メークする場合、LUNA SYSV なら Makefile.unU 、LUNA BSD なら Makefile.unB
      を使って下さい。
   (2)また、tmpl.patch というファイルがありますので、オリジナルの imake.tmpl に
      パッチを当てて下さい。
   (3)OMRON.macros というファイルがありますので、util/imake.includes の下におい
      て下さい。

●	uum

uum の基本オペレーションは、 バージョン3の wnn のものと大きく変わって
いません。ただ、今まで wnnrc, wnnkey と呼ばれたものは、uumrc, uumkeyと
いう名前に変更になりました。また、いままで wnnrc に書かれていた辞書な
どの設定は、変換に仮名漢字変換以外に漢字仮名変換、仮名ローマ字変換の環
境を用いるために、別のファイルに書かれ、そのファイル名をuumrc に
指定するようになっています。(manual を見て下さい。)

 少し、キーバインドの変更があります。

 デフォルトでは、^W で変換(ここまでは同じ)の後(変換後モード)で、
 ^W とすると、今までは、次候補が出ましたが、V4 からは、
 全候補となります。

 V3 の全候補は、^G でしたが、^G に、バインドされているのは、解除だけとなります。

 追加された機能、

    大文節のサポート

    大文節は、小文節がいくつかつながったもので、
    小文節は、今までと同様です。
    例えば、接頭語+名詞+接尾語で、一つの大文節になります。

    大文節は、ボールド(ボールドをサポートしていない端末 gmw_shell, gmwterm
    などでは、アンダーライン)で、表示されます。

    小文節は、今まで同様、リバース表示です。

    入力モードから、^W とすると、入力された文字列を、連文節変換します。
    ^Z とすると、入力された文字列を、1小文節とみなして変換します。
    入力された文字列を、1大文節とみなして変換するキーは、バインドしていません。

    変換後モードで、

    大文節レベルの操作をサポートしていつものに、
    連文節変換(^W), 次候補(^N)/前候補(^P)/全候補(^W)、
    文節伸ばしちじみ後の変換(^W)です。

    小文節レベルの変換は、
    全候補(^Z), 文節伸ばしちじみ後の変換(^Z)です。
    次候補/前候補は、標準では、バインドしていません。

    あとは、インスペクトがあります、
    変換後に、^V とすると、変換結果の詳細な情報を出します。
    (品詞、辞書、頻度、評価値など)
    この後(インスペクトモード)で、
    ^N, ^P 小文節の次候補、前候補
    ^U, ^D 候補の自立語を変換に使用しない/削除ができます。

    ^U, ^D は、単語検索のモードからも使えます。

    また、辞書一覧/辞書情報からも、辞書の使用/不使用、削除ができます。

    漢字仮名変換、
    入力モードで、^C とすると、入力された文字列を漢字仮名変換します。
    漢字の入力は、カットアンドペースとか、uum のヒストリから持ってきます。

    変換モードで、^C は、今まで通り、入力モードへの移行です。

    仮名ローマ字変換
    入力モードから、^R とすると、
    入力された平仮名、カタカナを、ローマ字、あるいは、半角カタカナに変換します。
    これは、文節伸ばしちじみの時にも使えます。

    それからもう一つ、
    半角入力された、文字を、全角に変換、数字に関しては、漢数字にも変換します。
    たどえば、1234 の全候補をとると、
    1234	1,234	一二三四
    １２３４	１，２３４
    一千二百三十四	壱阡弐陌参拾四
    が候補として出てきます。

    アルファベット、数字、記号の三種類毎に、直前にどれを選択したかを覚えていて、
    それを第一候補とします。

    詳しくは、マニュアルを見て下さい。



●	manual 以外のディレクトリは、以下の通りです。

conv
	コンバート・キー(ファンクションキーの吐くコード列を、適当なコー
	ドに変換する)のソースが存在します。
etc
	複数のディレクトリで共有されるソースファイルが存在します。
fuzokugo
	付属語ファイル作成プログラム(atof)、および、pubdic の付属語ファイルが
	存在します。
include 
	ヘッダーファイルが存在します。
jd
	uum, jserver, ローマ字仮名変換などの初期化ファイル、
	品詞ファイルが存在します。このディレクトリの内容は、
	/usr/local/lib/wnn といったディレクトリにインストールされます。

	    jserverrc - jserver の立上りの設定ファイルです。
	    uumrc	uum の立上りの設定ファイルです。
	    uumkey	uum のキーバインド設定ファイルです。
	    wnnenvrc	uum 使用時の辞書等の設定ファイルです。
	jd の下には、いろいろな設定のものが用意されています。
	好みに合わせて御利用下さい。

jlib
	ライブラリのソースが存在します。
jlib.V3
	バージョン3に対する互換ライブラリのソースが存在します。
jserver
	jserver のソースが存在します。
jutil
	辞書ユーティリティのソースが存在します。
		atod	 辞書の作成
		dtoa	 辞書のテキストへの変更
		oldatonewa バージョン３までの辞書のテキスト形式を、
			バージョン４のテキスト形式に変更
		wnnstat	 jserver の状態(ユーザ、環境、ファイル、辞書)を調べる。
		wnnkill	 jserver を終了させる。
		wnntouch 辞書ファイルなどのファイルのFID が、ファイルのヘッダに
			持っているものと異なる時に一致させる。
		wddel	単語削除をバッチ的に行なう
		wdreg	単語登録をバッチ的に行なう
pubdic 			
	pubdic の辞書が存在します。
	辞書は、 逆引き形式で作ってあります。
romkan
	ローマ字仮名変換のソースが存在します。
uum
	フロントエンド・プロセッサ uum のソースが存在します。

