# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.37 88/10/08 20:08:30 jim Exp $

###########################################################################
# Makefile generated from "Imake.template" and "/usr/tmp/tmp-imake.000268"
# $XConsortium: Imake.tmpl,v 1.51 89/08/31 17:45:11 jim Exp $
#
# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit rt.cf to change

 LDCOMBINEFLAGS = -X -r
            PCC = pcc

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.10 89/09/06 15:29:05 jim Exp $

            SHELL =        /bin/sh

              TOP = ../../../x11
      CURRENT_DIR = .

               AR =                  ar cq
  BOOTSTRAPCFLAGS =
               CC =                  hc
         COMPRESS =            compress
              CPP =                 /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD =                           hc -E         $(STD_CPP_DEFINES)
          INSTALL =             install
               LD =                  ld
             LINT =                lint
      LINTLIBFLAG =            -C
         LINTOPTS =               -axz
               LN =                  ln -s
             MAKE =                make
               MV =                  mv
               CP =                  cp
           RANLIB =              ranlib
  RANLIBINSTFLAGS =
               RM =              rm -f
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS =                ctags

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

          DESTDIR =

         INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS =
      COMPATFLAGS =
       ALLDEFINES = $(STD_INCLUDES) $(INCLUDES) $(STD_DEFINES)
$(DEFINES) $(COMPATFLAGS)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
          LDFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        MACROFILE = rt.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
            .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
            $(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
            $(IRULESRC)/$(MACROFILE)

###########################################################################
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.37 89/08/24 10:40:17 jim Exp $

###########################################################################
# X Window System make variables; this need to be coordinated with rules
# $XConsortium: Project.tmpl,v 1.37 89/08/24 10:40:17 jim Exp $

          PATHSEP = /
        USRLIBDIR = $(DESTDIR)/usr/lib
           BINDIR = $(DESTDIR)/usr/bin/X11
          INCROOT = $(DESTDIR)/usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = $(DESTDIR)/usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           AWMDIR = $(LIBDIR)/awm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = $(DESTDIR)/usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)   n
        LIBMANDIR = $(MANSOURCEPATH)   3
      XAPPLOADDIR = $(LIBDIR)/app-defaults

          FCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = imake
           DEPEND = makedepend

              RGB = $(RGBSRC)/rgb
               FC = $(BDFTOSNFSRC)/bdftosnf
        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER =        /bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/utils/X11R4/config
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(UTILSRC)/imake
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
     EXTENSIONSRC = $(TOP)/extensions

          DEPXLIB =  $(USRLIBDIR)/libX11.a
             XLIB = $(DEPXLIB)

  DEPEXTENSIONLIB =  $(USRLIBDIR)/libXext.a
     EXTENSIONLIB = $(DEPEXTENSIONLIB)

      DEPXAUTHLIB =  $(USRLIBDIR)/libXau.a
         XAUTHLIB = $(DEPXAUTHLIB)

        DEPXMULIB =  $(USRLIBDIR)/libXmu.a
           XMULIB = $(DEPXMULIB)

       DEPOLDXLIB =  $(USRLIBDIR)/liboldX.a
          OLDXLIB = $(DEPOLDXLIB)

      DEPXTOOLLIB =  $(USRLIBDIR)/libXt.a
         XTOOLLIB = $(DEPXTOOLLIB)

        DEPXAWLIB =  $(USRLIBDIR)/libXaw.a
           XAWLIB = $(DEPXAWLIB)

         LINTXLIB =  $(USRLIBDIR)/llib-lX11.ln
          LINTXMU =  $(USRLIBDIR)/llib-lXmu.ln
        LINTXTOOL =  $(USRLIBDIR)/llib-lXt.ln
          LINTXAW =  $(USRLIBDIR)/llib-lXaw.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) \
$(DEPEXTENSIONLIB) $(DEPXLIB)
         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.55 89/08/31 17:44:57 jim Exp $

subtarget,DESTDIR='$(DESTDIR)' LINTOPTS='$(LINTOPTS)',subtarget)

###########################################################################
# start of Imakefile

#
#
#		Copyright IBM Corporation 1989
#
#                      All Rights Reserved
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose and without fee is hereby granted,
# provided that the above copyright notice appear in all copies and that
# both that copyright notice and this permission notice appear in
# supporting documentation, and that the name of IBM not be
# used in advertising or publicity pertaining to distribution of the
# software without specific, written prior permission.
#
# IBM DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN    0 EVENT SHALL
# IBM BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
#
# Top level Imakefile for XGKS tree
#
# Author:  Bruce Greer
#
# $Header: Imakefile,v 4.3 89/09/07 12:43:12 amy Exp $
#
# $Log:	Imakefile,v $
# Revision 4.3  89/09/07  12:43:12  amy
#
#
# Revision 4.2  89/09/06  14:59:25  amy
# fixed make depend for demo subdir (I hope)
#
# Revision 4.1  89/09/06  14:26:51  amy
# changed order of subdirs so src is done first.
#
# Revision 4.0  89/09/06  09:44:36  amy
# Deleted IBINDIR:  unneeded.
#
# Revision 4.0  89/08/31  10:46:14  amy
# Changed IBM copyright for MIT distribution.
#
# Revision 1.1  89/05/12  11:33:19  bruce
# Initial revision
#
#

SUBDIRS = src fortran

all::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SRCSUBDIRS) ;\
    do \
        (cd $$i ; echo "making" all "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS) 'CDEBUGFLAGS=$(CDEBUGFLAGS)' 'FONTDBDIR=$(FONTDBDIR)' 'INSTALLHOME=$(INSTALLHOME)' all); \
    done

depend::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SRCSUBDIRS) ;\
    do \
        (cd $$i ; echo "depending" "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS)  depend); \
    done

demo::
	for i in $(DEMOSUBDIRS) ;\
	do \
		(cd $$i ; echo "depending $$i"; \
			$(MAKE) -DBSDrt $(MFLAGS) 'CDEBUGFLAGS=$(CDEBUGFLAGS)' 'FONTDBDIR=$(FONTDBDIR)' 'INSTALLHOME=$(INSTALLHOME)' depend ); \
	done

demo::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in  $(DEMOSUBDIRS) ;\
    do \
        (cd $$i ; echo "making" demo "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS) 'CDEBUGFLAGS=$(CDEBUGFLAGS)' 'FONTDBDIR=$(FONTDBDIR)' 'INSTALLHOME=$(INSTALLHOME)' all); \
    done

###########################################################################
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile::
	-@if [ -f Makefile ]; then \
        echo "    $(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
        $(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
    else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

###########################################################################
# rules for building in SUBDIRS - do not edit

install::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SUBDIRS) ;\
    do \
        (cd $$i ; echo "installing" "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' install); \
    done

install.man::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SUBDIRS) ;\
    do \
        (cd $$i ; echo "installing man \
pages" "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' install.man); \
    done

clean::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SUBDIRS) ;\
    do \
        (cd $$i ; echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS) RM_CMD='$(RM_CMD)' clean); \
    done

tags::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SUBDIRS) ;\
    do \
        (cd $$i ; echo "tagging" "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS) TAGS='$(TAGS)' tags); \
    done

Makefiles::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SUBDIRS) ;\
    do \
        echo "making Makefiles in $(CURRENT_DIR)/$$i..."; \
        case "$$i" in \
        ./?*/?*/?*/?*) newtop=../../../../ sub=subsubsubsub;; \
        ./?*/?*/?*) newtop=../../../ sub=subsubsub;; \
        ./?*/?*)    newtop=../../ sub=subsub;; \
        ./?*)       newtop=../ sub=sub;; \
        */?*/?*/?*)    newtop=../../../../ sub=subsubsubsub;; \
        */?*/?*)    newtop=../../../ sub=subsubsub;; \
        */?*)       newtop=../../ sub=subsub;; \
        *)        newtop=../ sub=sub;; \
        esac; \
        $(MAKE) $${sub}dirMakefiles NEWTOP=$$newtop \
        MAKEFILE_SUBDIR=$$i NEW_CURRENT_DIR=$(CURRENT_DIR)/$$i;\
    done

subdirMakefiles:
	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then \
	echo "    $(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak"; \
	$(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
	fi
	cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=../$(TOP) -DCURDIR=$(NEW_CURRENT_DIR) -s Makefile; \
	$(MAKE) $(MFLAGS) Makefiles

subsubdirMakefiles:
	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then \
    echo "    $(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak"; \
    $(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
    else exit 0; fi
    cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=../../$(TOP) -DCURDIR=$(NEW_CURRENT_DIR); \
    $(MAKE) $(MFLAGS) Makefiles

subsubsubdirMakefiles:
	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then \
    echo "    $(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak"; \
    $(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
    else exit 0; fi
    cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=../../../$(TOP) -DCURDIR=$(NEW_CURRENT_DIR); \
    $(MAKE) $(MFLAGS) Makefiles

subsubsubsubdirMakefiles:
	$(RM) $(MAKEFILE_SUBDIR)/Makefile.bak
	-@if [ -f $(MAKEFILE_SUBDIR)/Makefile ]; then \
    echo "    $(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak"; \
    $(MV) $(MAKEFILE_SUBDIR)/Makefile $(MAKEFILE_SUBDIR)/Makefile.bak; \
    else exit 0; fi
    cd $(MAKEFILE_SUBDIR); $(IMAKE_CMD) -DTOPDIR=../../../../$(TOP) -DCURDIR=$(NEW_CURRENT_DIR); \
    $(MAKE) $(MFLAGS) Makefiles

includes::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
    for i in $(SUBDIRS) ;\
    do \
        (cd $$i ; echo including "in $(CURRENT_DIR)/$$i..."; \
            $(MAKE) $(MFLAGS)  includes); \
    done

###########################################################################
# dependencies generated by makedepend

