#
# %Z%%M% %I% %E% SMI
#

#include "../../../XView.config"

HDRSPUBLIC=	win_enum.h win_env.h win_event.h win_input.h win_notify.h \
		win_screen.h  win_struct.h
HDRSPRIVATE=	win_info.h    win_keymap.h   win_kmdata.h win_ascii.h
HEADERS= ${HDRSPUBLIC} ${HDRSPRIVATE}
INCLUDES= -I$(HEADER_DEST) -I$(TOP)

OBJS =\
	win_cursor.o\
	win_env.o\
	win_geom.o\
	win_global.o\
	win_cntral.o\
	win_input.o\
	win_treeop.o\
	win_bell.o\
	win_damage.o\
	win_compat.o\
	win_keymap.o

SRCS =\
	win_cursor.c\
	win_env.c\
	win_geom.c\
	win_global.c\
	win_cntral.c\
	win_input.c\
	win_treeop.c\
	win_bell.c\
	win_damage.c\
	win_compat.c\
	win_keymap.c

all::

#if DebugLibXvin && ProfileLibXvin
DebuggedAndProfiledLibraryObjectRule()
#else
# if DebugLibXvin
DebuggedLibraryObjectRule()
# else
#  if ProfileLibXvin
ProfiledLibraryObjectRule()
#  else
NormalLibraryObjectRule()
#  endif
# endif
#endif

SubdirNormalLibTarget(xvin,$(OBJS))
SubdirCompoundLibTarget(xview, $(OBJS)) 

#if ProfileLibXvin
SubdirProfiledLibTarget(xvin,$(OBJS))
#endif

#if DebugLibXvin
SubdirDebuggedLibTarget(xvin,$(OBJS))
#endif

InstallMultipleDest(install_headers,$(HDRSPUBLIC),$(HEADER_DEST)/xview)
InstallMultipleDest(install_headers,$(HDRSPRIVATE),$(HEADER_DEST)/xview_private)

DependTarget()
