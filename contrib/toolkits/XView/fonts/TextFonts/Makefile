# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.48 89/10/10 18:33:21 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

###########################################################################
# Makefile generated from "Imake.tmpl" and </tmp/IIf.a09130>
# $XConsortium: Imake.tmpl,v 1.58 89/10/09 17:27:17 jim Exp $
#
# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $XConsortium: sun.cf,v 1.32 89/10/11 18:54:52 jim Exp $
# operating system:  SunOS 4.0.3

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.15 89/10/11 18:55:07 jim Exp $

            SHELL = /bin/sh

              TOP = ../../../../../mit
      CURRENT_DIR = ./TextFonts

               AR = ar cq
  BOOTSTRAPCFLAGS =
               CC = cc

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp
           RANLIB = ranlib
  RANLIBINSTFLAGS =
               RM = rm -f
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF = -DSHAREDCODE
         SHLIBDEF = -DSUNSHLIB

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

          DESTDIR =

         INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS = -pipe
      COMPATFLAGS =
       ALLDEFINES = $(STD_INCLUDES) $(INCLUDES) $(STD_DEFINES) $(DEFINES) $(COMPATFLAGS)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
          LDFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        MACROFILE = sun.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
			.emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE)

###########################################################################
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.43 89/10/11 18:55:03 jim Exp $

###########################################################################
# X Window System make variables; this need to be coordinated with rules
# $XConsortium: Project.tmpl,v 1.43 89/10/11 18:55:03 jim Exp $

          PATHSEP = /
        USRLIBDIR = $(DESTDIR)/usr/lib
           BINDIR = $(DESTDIR)/usr/bin/X11
          INCROOT = $(DESTDIR)/usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = $(DESTDIR)/usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           AWMDIR = $(LIBDIR)/awm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = $(DESTDIR)/usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)n
        LIBMANDIR = $(MANSOURCEPATH)3
      XAPPLOADDIR = $(LIBDIR)/app-defaults

        SOXLIBREV = 4.2
          SOXTREV = 4.0
         SOXAWREV = 4.0
        SOOLDXREV = 4.0
         SOXMUREV = 4.0
        SOXEXTREV = 4.0

       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend

              RGB = $(RGBSRC)/rgb
            FONTC = $(BDFTOSNFSRC)/bdftosnf
        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = /bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(UTILSRC)/imake
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
     EXTENSIONSRC = $(TOP)/extensions

  DEPEXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
     EXTENSIONLIB =  $(DEPEXTENSIONLIB)

          DEPXLIB = $(DEPEXTENSIONLIB)
             XLIB = $(EXTENSIONLIB) -L$(XLIBSRC) -lX11

      DEPXAUTHLIB = $(XAUTHSRC)/libXau.a
         XAUTHLIB =  $(DEPXAUTHLIB)

        DEPXMULIB =
           XMULIB = -L$(XMUSRC) -lXmu

       DEPOLDXLIB =
          OLDXLIB = -L$(OLDXLIBSRC) -loldX

      DEPXTOOLLIB =
         XTOOLLIB = -L$(TOOLKITSRC) -lXt

        DEPXAWLIB =
           XAWLIB = -L$(AWIDGETSRC) -lXaw

         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPEXTENSIONLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.61 89/10/09 16:53:11 jim Exp $

###########################################################################
# start of Imakefile

#
# Imakefile for fonts.
#
# This will look in the standard place for mkfontdir
# and bdftosnf (in the X11 source tree). If you wish to get the
# binaries from elsewhere, define MKFONTDIR to be the location of mkfontdir
# and FC to be the location of bdftosnf.
#

#
# @(#)XView.config	1.2	89/07/27
#
#
# Global XView library definitions
#
# When anything is changed here, you must remake all the Makefiles
# from the Imakefiles.
#
# LIBRARY_DEST is the destination directory for the XView libraries
# HEADER_DEST is the destination directory for the XView header files
# CDEBUGFLAGS should be set to -DPRE_R4_ICCCM if you're running a
#	pre-release-4 version of libX11.a. You might also want to add
#	a -O to CDEBUGFLAGS if you want to build an optimized library.
#
# If your X11 "mkfontdir" and/or "bdftosnf" programs are not
# in the standard place (within the X11 source tree), define their
# locations as MKFONTDIR and FC, respectively.

# DEC3100 Config options

LIBRARY_DEST=/home2/x11r4/contrib/toolkits/XView/install/lib
HEADER_DEST=/home2/x11r4/contrib/toolkits/XView/install/include
TOOLDIR=../../../usr.bin/tools

FCFLAGS=
CDEBUGFLAGS=

FONTINSTDIR=/home2/x11r4/contrib/toolkits/XView/install/lib/fonts
OPENLOOK_FONTINSTDIR=$(FONTINSTDIR)/misc
TEXTFONT_FONTINSTDIR=$(FONTINSTDIR)/75dpi

MKFONTDIR=/home/X11R4/bin/mkfontdir
RANLIBINSTFLAGS=
AR=ar clq

#
# Imake rules for XView
# *** DO NOT CHANGE ANYTHING BELOW THIS LINE! ***
#

XVIEW_VERSION=1.2

SRCS = \
	luBIS08.bdf luBIS10.bdf luBIS12.bdf luBIS14.bdf luBIS18.bdf \
	luBIS24.bdf luBS08.bdf luBS10.bdf luBS12.bdf luBS14.bdf \
	luBS18.bdf luBS24.bdf luIS08.bdf luIS10.bdf luIS12.bdf \
	luIS14.bdf luIS18.bdf luIS24.bdf luRS08.bdf luRS10.bdf \
	luRS12.bdf luRS14.bdf luRS18.bdf luRS24.bdf lubB08.bdf \
	lubB10.bdf lubB12.bdf lubB14.bdf lubB18.bdf lubB24.bdf \
	lubBI08.bdf lubBI10.bdf lubBI12.bdf lubBI14.bdf lubBI18.bdf \
	lubBI24.bdf lubI08.bdf lubI10.bdf lubI12.bdf lubI14.bdf \
	lubI18.bdf lubI24.bdf lubR08.bdf lubR10.bdf lubR12.bdf \
	lubR14.bdf lubR18.bdf lubR24.bdf lutBS08.bdf lutBS10.bdf \
	lutBS12.bdf lutBS14.bdf lutBS18.bdf lutBS24.bdf lutRS08.bdf \
	lutRS10.bdf lutRS12.bdf lutRS14.bdf lutRS18.bdf lutRS24.bdf \
	luBIS19.bdf luBS19.bdf luIS19.bdf luRS19.bdf lubB19.bdf \
	lubBI19.bdf lubI19.bdf lubR19.bdf lutBS19.bdf lutRS19.bdf

OBJS = \
	luBIS08.snf luBIS10.snf luBIS12.snf luBIS14.snf luBIS18.snf \
	luBIS24.snf luBS08.snf luBS10.snf luBS12.snf luBS14.snf \
	luBS18.snf luBS24.snf luIS08.snf luIS10.snf luIS12.snf \
	luIS14.snf luIS18.snf luIS24.snf luRS08.snf luRS10.snf \
	luRS12.snf luRS14.snf luRS18.snf luRS24.snf lubB08.snf \
	lubB10.snf lubB12.snf lubB14.snf lubB18.snf lubB24.snf \
	lubBI08.snf lubBI10.snf lubBI12.snf lubBI14.snf lubBI18.snf \
	lubBI24.snf lubI08.snf lubI10.snf lubI12.snf lubI14.snf \
	lubI18.snf lubI24.snf lubR08.snf lubR10.snf lubR12.snf \
	lubR14.snf lubR18.snf lubR24.snf lutBS08.snf lutBS10.snf \
	lutBS12.snf lutBS14.snf lutBS18.snf lutBS24.snf lutRS08.snf \
	lutRS10.snf lutRS12.snf lutRS14.snf lutRS18.snf lutRS24.snf \
	luBIS19.snf luBS19.snf luIS19.snf luRS19.snf lubB19.snf \
	lubBI19.snf lubI19.snf lubR19.snf lutBS19.snf lutRS19.snf

all:: $(OBJS) fonts.dir

fonts.dir: $(OBJS)
	$(MKFONTDIR) .

clean::
	$(RM) *.snf fonts.dir

luBIS08.snf: luBIS08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBIS10.snf: luBIS10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBIS12.snf: luBIS12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBIS14.snf: luBIS14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBIS18.snf: luBIS18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBIS24.snf: luBIS24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBS08.snf: luBS08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBS10.snf: luBS10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBS12.snf: luBS12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBS14.snf: luBS14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBS18.snf: luBS18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBS24.snf: luBS24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luIS08.snf: luIS08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luIS10.snf: luIS10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luIS12.snf: luIS12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luIS14.snf: luIS14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luIS18.snf: luIS18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luIS24.snf: luIS24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luRS08.snf: luRS08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luRS10.snf: luRS10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luRS12.snf: luRS12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luRS14.snf: luRS14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luRS18.snf: luRS18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luRS24.snf: luRS24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubB08.snf: lubB08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubB10.snf: lubB10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubB12.snf: lubB12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubB14.snf: lubB14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubB18.snf: lubB18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubB24.snf: lubB24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubBI08.snf: lubBI08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubBI10.snf: lubBI10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubBI12.snf: lubBI12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubBI14.snf: lubBI14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubBI18.snf: lubBI18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubBI24.snf: lubBI24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubI08.snf: lubI08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubI10.snf: lubI10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubI12.snf: lubI12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubI14.snf: lubI14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubI18.snf: lubI18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubI24.snf: lubI24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubR08.snf: lubR08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubR10.snf: lubR10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubR12.snf: lubR12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubR14.snf: lubR14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubR18.snf: lubR18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubR24.snf: lubR24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutBS08.snf: lutBS08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutBS10.snf: lutBS10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutBS12.snf: lutBS12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutBS14.snf: lutBS14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutBS18.snf: lutBS18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutBS24.snf: lutBS24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutRS08.snf: lutRS08.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutRS10.snf: lutRS10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutRS12.snf: lutRS12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutRS14.snf: lutRS14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutRS18.snf: lutRS18.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutRS24.snf: lutRS24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBIS19.snf: luBIS19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luBS19.snf: luBS19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luIS19.snf: luIS19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

luRS19.snf: luRS19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubB19.snf: lubB19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubBI19.snf: lubBI19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubI19.snf: lubI19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lubR19.snf: lubR19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutBS19.snf: lutBS19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

lutRS19.snf: lutRS19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

install:: $(OBJS)
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(OBJS); do \
	(set -x; $(INSTALL) -c $(INSTALLFLAGS) $$i $(TEXTFONT_FONTINSTDIR)); \
	done

install:: fonts.dir
	$(INSTALL) -c $(INSTINCFLAGS) fonts.dir $(TEXTFONT_FONTINSTDIR)

install::
	cd $(TEXTFONT_FONTINSTDIR); chmod +w fonts.dir; $(MKFONTDIR) .

depend::

###########################################################################
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS); fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then \
	echo "	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

saber:
	#load $(ALLDEFINES) $(SRCS)

osaber:
	#load $(ALLDEFINES) $(OBJS)

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

###########################################################################
# dependencies generated by makedepend

