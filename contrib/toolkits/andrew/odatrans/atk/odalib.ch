/**********************************************
(c) Copyright 1988 Carnegie Mellon University
See andrew/oda/doc/COPYRITE
***********************************************/

/*
		(c) Copyright 1989 Carnegie Mellon University

 See "The CMU ODA Tool Kit" (available as CMU/ITC tech report
 CMU-ITC-071) for full text & permitted uses.


    ATK .H file generated by a script
*/

#include <andrewos.h>

package odalib {
classprocedures:

    ERROR_SEQUENCE() returns SEQUENCE_type;
    NULL_SEQUENCE() returns SEQUENCE_type;
    ERROR_CONSTITUENT() returns CONSTITUENT;
    NULL_CONSTITUENT() returns CONSTITUENT;
    ERROR_DOCUMENT() returns DOCUMENT_type;
    ERROR_STRING() returns STRING_type;
    NULL_STRING() returns STRING_type;
    ERROR_ITERATOR() returns ITERATOR_type;
    at_CONTENT_ARCH_CLASS_form_cc() returns ASN1_OBJECT_ID_type;
    at_CONTENT_ARCH_CLASS_proc_cc() returns ASN1_OBJECT_ID_type;
    at_CONTENT_ARCH_CLASS_fp_cc() returns ASN1_OBJECT_ID_type;
    at_CONTENT_ARCH_CLASS_form_rg() returns ASN1_OBJECT_ID_type;
    at_CONTENT_ARCH_CLASS_fp_rg() returns ASN1_OBJECT_ID_type;
    at_CONTENT_ARCH_CLASS_form_gg() returns ASN1_OBJECT_ID_type;
    at_TYPE_OF_CODING_cc() returns ASN1_OBJECT_ID_type;
    at_TYPE_OF_CODING_T6() returns ASN1_OBJECT_ID_type;
    at_TYPE_OF_CODING_T4_1() returns ASN1_OBJECT_ID_type;
    at_TYPE_OF_CODING_T4_2() returns ASN1_OBJECT_ID_type;
    at_TYPE_OF_CODING_bitmap() returns ASN1_OBJECT_ID_type;
    at_TYPE_OF_CODING_gg() returns ASN1_OBJECT_ID_type;
    TKError() returns INT_type;
    TKErrorMesg() returns CHAR_type  *;
    SetAttr(constituent, attribute, value, mask) returns INT_type;
    GetAttr(constituent, attribute, value, inherited, mask) returns INT_type;
    SetIntAttr(constituent, attribute, value) returns INT_type;
    GetIntAttr(constituent, attribute, value, inherited) returns INT_type;
    SetValueAttr(constituent, attribute, value) returns INT_type;
    GetValueAttr(constituent, attribute, value, inherited) returns INT_type;
    SetLayoutAttr(constituent, attribute, value, mask) returns INT_type;
    SetPresAttr(constituent, attribute, value, mask) returns INT_type;
    SetStringAttr(constituent, attribute, value, chars) returns INT_type;
    AppendSubordinate(parent,child) returns INT_type;
    GetContentKind(constituent) returns VALUE_type;
    GetContent(constituent) returns SEQUENCE_BYTE_type;
    HasAttr(constituent, attribute) returns INT_type;
    RemAttr(constituent, attribute) returns INT_type;
    UnspecParms(constituent, attribute, unspec) returns INT_type;
    GetParmMask(constituent, attribute, mask) returns INT_type;
    GetAttrName(attribute) returns CHAR_type *;
    GetValueName(value) returns CHAR_type *;
    WriteDocumentState(od, document) returns INT_type;
    WriteSubgraphState(od, constituent) returns INT_type;
    WriteStylesState(od, document, islayout) returns INT_type;
    WriteConstituentState(od, constituent) returns INT_type;
    isode_PrintODIF(infile) returns INT_type;
    EvalStringExpr(expr) returns STRING_type;
    EvalNumExpr(expr, value) returns INT_type;
    EvalObjIdExpr(expr) returns CONSTITUENT;
    DeleteConstExpr(construction_expression) returns INT_type;
    EvalRefBind(refbind, string, integer) returns INT_type;
    InitToolKit(parms) returns INT_type;
    FinalToolKit() returns INT_type;
    ReadODIF(id) returns DOCUMENT_type;
    WriteODIF(od, document, format) returns INT_type;
    isode_ReadODIF(infile) returns DOCUMENT_type;
    isode_WriteODIF(outfile, document, format) returns INT_type;
    LabelDocument(document) returns INT_type;
    LabelStructure(root) returns INT_type;
    LabelStyles(document, islayout) returns INT_type;
    MakeDocument() returns DOCUMENT_type;
    GetDocument(constituent) returns DOCUMENT_type;
    DeleteDocument(document, delete) returns INT_type;
    MakeComponent(document, type, kind) returns CONSTITUENT;
    MakeStyle(document, kind) returns CONSTITUENT;
    MakeContent(document, type) returns CONSTITUENT;
    MakeDocumentProfile(document) returns CONSTITUENT;
    CopyConstituent(document, constituent) returns CONSTITUENT;
    DeleteConstituent(constituent) returns INT_type;
    HoldConstituent(constituent) returns INT_type;
    ReleaseConstituent(constituent) returns INT_type;
    HoldAttr(attribute) returns INT_type;
    ReleaseAttr(attribute) returns INT_type;
    HoldString(string) returns INT_type;
    ReleaseString(string) returns INT_type;
    ComponentAttrPriority(set, type, class, attr, priority) returns INT_type;
    StyleAttrPriority(set, type, attribute, priority) returns INT_type;
    ContentAttrPriority(set, type, attribute, priority) returns INT_type;
    AttrDocProfPriority(set, attribute, priority) returns INT_type;
    LOCAL_Init() returns INT_type;
    LOCAL_Final() returns INT_type;
    LOCAL_ReadBytes(id, buffer, length) returns INT_type;
    LOCAL_WriteBytes(od, buffer, length) returns INT_type;
    LOCAL_ReadChars(id, buffer, length) returns INT_type;
    LOCAL_WriteChars(od, buffer, length) returns INT_type;
    LOCAL_Malloc(nbytes) returns POINTER_type;
    LOCAL_Realloc(old, newsize) returns POINTER_type;
    LOCAL_Free(block) returns INT_type;
    LOCAL_Bcopy(from, to, length) returns INT_type;
    LOCAL_SwapOut(address, length) returns SWAP_INFO_type *;
    LOCAL_SwapIn(swapinfo, address, available) returns INT_type;
    UnspecifyFont(font) returns INT_type;
    Dsclass2Ints(value) returns SEQUENCE_INT_type;
    Ints2Dsclass(ints) returns VALUE_type;
    Array2StrctName(NameArray, NumName, StructuredName) returns INT_type;
    String2StrctName(NameString, StructuredName) returns INT_type;
    SetFontFamilyArray(FontReference, FamilyArray, NumNames) returns INT_type;
    SetFontFamily(FontReference, NameString) returns INT_type;
    LookUpObjectId(id) returns VALUE_type;
    UnspecifyDefaultValueLists(default_value_lists) returns INT_type;
    InitializeDefaultValueLists(doc,default_value_lists,constituent_mask) returns INT_type;
    MakeSequence(type, length) returns SEQUENCE_type;
    DeleteSequence(sequence) returns INT_type;
    DeleteSequenceDeeply(sequence) returns INT_type;
    ExpandSequence(sequence, amount) returns INT_type;
    ContractSequence(sequence, amount) returns INT_type;
    AppendSequence(s1, s2) returns INT_type;
    CopySequence(sequence) returns SEQUENCE_type;
    MakeString(len) returns STRING_type;
    Chars2String(str) returns STRING_type;
    DeleteString(string) returns INT_type;
    ConcatString(s1, s2) returns STRING_type;
    FindDocumentRoot(document, kind) returns CONSTITUENT;
    FindDocumentProfile(document) returns CONSTITUENT;
    MakeSubgraphIterator(root, parent_order, walk_order) returns ITERATOR_type;
    MakeStylesIterator(document, kind) returns ITERATOR_type;
    NextConstituent(iterator) returns CONSTITUENT;
    DeleteIterator(iterator) returns INT_type;

};
