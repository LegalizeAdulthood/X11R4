\begindata{text,916352}
\textdsversion{12}
\template{help}
 

\chapter{\center{RMtext: An editing package for

Modula-2 Programmers}}


\section{What RMtext is 

}\leftindent{
RMtext is an editing package for Modula-2 programmers.  It provides an editing 
interface similar to that used for text files in EZ, but shows the text of 
Modula programs in a fixed-width font.  RMtext provides keybindings and menu 
features to support indentation of Modula program code and uses styles 
specified in the rmtext template.


An interactive diff package called ezdiff is available for comparing your 
RMtext files.  See the \italic{ez-diff}  help document for details.

}
\section{Starting RMtext}

\leftindent{
At the Typescript prompt, type "ez \italic{file}.def" or "ez\italic{ 
file}.mod" and press Enter.  Use of a .def or .mod extension tells EZ to load 
the rmtext editing package, according to specifications in the global 
initialization file for EZ.  


If you create your own .ezinit file, you can override the global.ezinit file 
or add other file extensions that will load the rmtext package.  You can also 
set various parameters of rmtext, which are listed in the section below, 
"Customizing RMtext in your .ezinit file."  For details about initialization 
files, see the \italic{initfiles} help document.

}
\section{How RMtext works}

\leftindent{
When a rmtext dataobject (usually a normal Modula source file) is read in, a 
set of styles are superimposed on it for the convenience of the programmer. 
 Comments are put in italic, Modula keywords are put in bold, and predefined 
identifiers are bold-italic.  None of the styles are actually written out with 
the code--they exist only during editing.   Modula keywords and predefined 
identifiers typed in all lowercase are automatically capitalized if the 
rmtext-force-upper parameter is set on.


RMtext adds these keybindings to those provided by EZ:


\bold{The tab key.} Tab has three uses:

\leftindent{
1) If there is a selected region, all the lines within that region will be 
re-indented to what rmtext considers the "correct" indentation.  


2) If there is no selected region and the text caret is positioned before any 
text on the current line (within the initial whitespace), then the line will 
be re-indented as above. 


3) If the text caret is positioned after some non-whitespace text on the line, 
it will insert enough whitespace to move to the caret to the next tab column. 
 Tab columns are positioned at multiples of four.  Any existing whitespace at 
the caret position will be counted as if it were inserted (so the tab key will 
skip over whitespace to the next tab column if it is sitting on whitespace). }


\bold{The Linefeed (^J) key.}   Linefeed does two things:  


\leftindent{1) It re-indents the current line, just in case it needs to be 
fixed up (since sometimes the indentation after typing something is different 
than without it, i.e., else). 


2) It inserts a newline, and then inserts the correct indentation for the new 
line (moving the caret to that point).  }


\bold{Note:} When the rmtext package inserts whitespace, it automatically 
inserts the correct combination of tab and space characters, replacing spaces 
by tabs when possible without changing the look of the line.  (This applies 
unless the rmtext-use-tabs parameter is set to 0.  See below.)}


\section{Pop-up Menu Meanings}

\leftindent{
In addition to the regular EZ menu options, RMtext supplies an additional 
menu, the Modula-2 Text menu.  It contains the following options:

\leftindent{
\bold{Redo M-2 Styles:}  Invokes the "Redo M-2 Styles" function which will 
redo the styles in the rmtext dataobject that is displayed. 


\bold{Indent line/region:}  Equivalent to pressing the tab key.


\bold{Compress region:}  If region isn't selected, will compress into a box 
all nearby lines indented with the current line.


\bold{Compress all inner indents:}  Compresses all regions in the program that 
are indented as far or farther than the current line.


\bold{Decompress all:}  Removes all the boxes and restores the compressed 
text.


\bold{Display Definition:}  Opens a window on the file containing the selected 
definition module, if the cursor is positioned on an import name.


\bold{Display Implementation:}  Opens a window on the file containing the 
selected implementation module.


\bold{Force Upper On:}  Will recognize the keywords and predefined identifiers 
you type in lowercase and capitalize them for you.


\bold{Force Upper Off:}  Will not recognize keywords or predefined identifiers 
unless they're typed as all uppercase.

 }}\section{

Customizing RMtext in your .ezinit file}

\leftindent{
RMtext has several parameters controlling its behavior which you can set in 
your own .ezinit file.  They are listed in bold with the default setting in 
italic:  


\leftindent{\bold{rmtext-use-tabs\italic{  0}}

If 0, don't use tabs for whitespace.


\bold{rmtext-cont-indent  \italic{2}}   

Controls indentation of continued single statements.


\bold{\bold{rmtext-level-indent}  \italic{4}}  

Controls indentation of nested block statements.


\bold{rmtext-force-upper \italic{0}}

If nonzero, will recognize keywords and predefined identifiers typed in 
lowercase and make them uppercase.}


You should put each of the parameters you want to change at the end of each 
addfiletype to which it applies.  For example:


\typewriter{\smaller{addfiletype .def rmtext 
"rmtext-level-indent=2;rmtext-use-tabs=0"}}}


\section{Related Tools}


Select (highlight) one of the italicized names and choose "Show Help on 
Selected Word" from the pop-up menu to see the help file for:


\leftindent{\italic{ctext}}

\leftindent{\italic{ltext}}

\leftindent{\italic{ptext}}

\leftindent{\italic{ez

ez-diff       }  (An interactive diff package for EZ)

\italic{initfiles}}

\enddata{text,916352}
