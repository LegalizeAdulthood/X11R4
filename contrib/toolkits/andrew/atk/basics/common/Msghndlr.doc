\begindata{text,269735500}
\textdsversion{12}
\template{be2guide}
\define{underline
menu:[Font~1,Underline~41]
attr:[Flags Underline Int Set]}
\define{index
menu:[Title,Index~91]
attr:[FontFace Italic Int Set]}
\define{indexi
menu:[Title,InvisibleIndex~92]
attr:[Script PreviousScriptMovement Point -2]
attr:[FontFace Italic Int Set]}
\formatnote{\chapter{Message Handler}} \indexi{Msghandler class} 
 \indexi{Message handler}


Class \italic{msghandler} defines the message handler object for use by 
message handlers.  Message handlers manage the display and interactions of 
messages posted in a window.  The methods provided by class 
 \italic{msghandler} correspond to the class procedures in \italic{message}. 
 Message handlers are used by framemessage and dialog boxes and other objects 
that can be defined as a subclass of \italic{msghandler,} or non-application 
level interfacing.  If you want to write your own message lines for an 
application program, or create your own dialog boxes, etc., you would create a 
subclass of \italic{msghandler}. 



\paragraph{Creating an instance of a message handler} 
\indexi{ \italic{msghandler_New}}

\example{struct msghandler *msghandler_New(classID)

struct classheader *classID;} 


\leftindent{\bold{Class procedure description.  }\italic{msghandler_New} 
creates an instance of a message handler. 


\bold{Return value.}  Returns a pointer to the newly created instance. 

}

\paragraph{Displaying a string} \indexi{ \italic{msghandler_DisplayString}}

\example{int msghandler_DisplayString(msghandler, priority, string)

struct msghandler *msghandler;

int priority;

char *string;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_DisplayString} 
displays a message string. \italic{ priority }should be 0 if the message is to 
be displayed in a message line. 


\bold{Return value.}  The default procedure will return a -1 to indicate the 
message was not displayed. 


\bold{Usage.}  This procedure is used for displaying a message. 

}

\begindata{bp,269792648}
\enddata{bp,269792648}
\view{bpv,269792648,47,0,0}
\paragraph{Asking for a string to be displayed} 
\indexi{ \italic{msghandler_AskForString}}

\example{int msghandler_AskForString(msghandler, priority, prompt, 
defaultString,buffer, bufferSize)

struct msghandler *msghandler;

int priority;

char *prompt, *defaultString, *buffer;

int bufferSize;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_AskForString} is 
used for messages that ask for an input string.  The parameters are the 
message handler, the priority of the message, the prompt and the message 
string to be used, and the buffer and buffer size the message will be 
displayed in. 


\bold{Return value.}  -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 


\bold{Usage.}  This procedure is used to request a message to be displayed. 

}


\paragraph{Asking for a string to be completed} 
\indexi{ \italic{msghandler_AskForStringCompleted}}

\example{int msghandler_AskForStringCompleted(msghandler, priority, prompt, 
defaultString,buffer, bufferSize, keymap, completionProc, helpProc, 
functionData,flags)

struct msghandler *msghandler;

int priority;

char *prompt, *defaultString, *buffer;

int bufferSize;

struct keymap *keymap;

int (*completionProc)(), (*helpProc)();

long functionData, flags;

}
\leftindent{\bold{Method description. 
 }  \italic{msghandler_AskForStringCompleted} uses the completion and help 
procedures provided to respond to user's input.  If a user types in part of a 
response to a message line, then hits a space, there will be check on whether 
that response is complete and unique, complete and valid (i.e. ambiguous), 
valid (is a prefix of a complete string), or invalid.  If the response is 
anything but complete, the procedure will use the completion procedure to try 
to complete the string.  If it fails, it will display a help text. 


\bold{Return value.}   -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 


\bold{Usage.}  This procedure is used for message lines that request an input 
string. 

}
\begindata{bp,269792516}
\enddata{bp,269792516}
\view{bpv,269792516,48,0,0}
\paragraph{Post a multiple choice question} 
\indexi{ \italic{msghandler_MultipleChoiceQuestion}}

\example{int msghandler_MultipleChoiceQuestion(msghandler, priority, prompt,

defaultChoice, result, choices, abbrevKeys)

struct msghandler *msghandler;

int priority;

char *prompt;

long *defaultChoice;

long *result;

char **choices;

char *abbrevKeys;

}
\leftindent{\bold{Method description. 
 }  \italic{msghandler_MultipleChoiceQuestion} sets up a multiple choice 
question in a view, with two or more characters as the choices.  As with 
AskForString, you must pass a priority, a prompt character, a message string, 
and a buffer. 


\bold{Return value.}   -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 


\bold{Usage.}   This procedure is intended primarily for dialog boxes, which 
are currently unimplemented. 

}
\paragraph{Canceling the question} \indexi{ \italic{msghandler_CancelQuestion}}

\example{void msghandler_CancelQuestion(msghandler)

struct msghandler *msghandler;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_CancelQuestion} 
retracts the question. 


\bold{Usage.}  This procedure is intended for dialog boxes, which are 
currently unimplemented. }

\begindata{bp,269792312}
\enddata{bp,269792312}
\view{bpv,269792312,49,0,0}
\paragraph{Getting the current string} 
\indexi{ \italic{msghandler_GetCurrentString}}

\example{int msghandler_GetCurrentString(msghandler, buffer, bufferSize)

struct msghandler *msghandler;

char *buffer;

int bufferSize;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_GetCurrentString} 
gets the current message string. 


\bold{Return value.}   -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 

 

\bold{Usage.}  Applicable only during calls to \italic{AskForString} 
and\italic{ AskForStringCompleted}.  

}

\paragraph{Inserting characters} \indexi{ \italic{msghandler_InsertCharacters}}

\example{int msghandler_InsertCharacters(msghandler, pos, string, len)

struct msghandler *msghandler;

int pos;

char *string;

int len;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_InsertCharacters} 
inserts a string of length  \italic{len }at the position \italic{pos} in a 
view. 


\bold{Return value.}   -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 


\bold{Usage.}   Applicable only during calls to \italic{AskForString} 
and\italic{ AskForStringCompleted}.  If there is already a question being 
asked, and another function is called, the procedure queries the message line 
to decide if it should be changed.  If so, then a new message line would be 
inserted. 

}
\begindata{bp,269788004}
\enddata{bp,269788004}
\view{bpv,269788004,50,0,0}
\paragraph{Deleting characters} \indexi{ \italic{msghandler_DeleteCharacters}}

\example{int msghandler_DeleteCharacters(msghandler, pos, len)

struct msghandler *msghandler;

int pos, len;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_DeleteCharacters} 
deletes characters from a message string. 


\bold{Return value.}   -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 


\bold{Usage.}  Applicable only during calls to \italic{AskForString} 
and\italic{ AskForStringCompleted}.  This procedure is used in the same manner 
as \italic{InsertCharacters}, except that it will be used to delete characters 
from the displayed message string. 

}
\paragraph{Getting the cursor position} 
\indexi{ \italic{msghandler_GetCursorPos}}

\example{int msghandler_GetCursorPos(msghandler)

struct msghandler *msghandler;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_GetCursorPos} 
gets the current cursor position in a view. 


\bold{Return value.}   -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 


\bold{Usage.}  Applicable only during calls to \italic{AskForString} 
and\italic{ AskForStringCompleted}.  This procedure can be called to find out 
where the user is typing. 

}

\paragraph{Setting the cursor position} 
\indexi{ \italic{msghandler_SetCursorPos}}

\example{int msghandler_SetCursorPos(msghandler, pos)

struct msghandler *msghandler;

int pos;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_SetCursorPos} 
sets a cursor position for a message string in a view. 


\bold{Return value.}   -1 will be returned if the procedure could not be 
completed; otherwise, the return value is a value greater than +1. 


\bold{Usage.}  Applicable only during calls to \italic{AskForString} 
and\italic{ AskForStringCompleted}. 

}
\begindata{bp,269787776}
\enddata{bp,269787776}
\view{bpv,269787776,51,0,0}
\paragraph{Finding out if a question is being asked} 
\indexi{ \italic{msghandler_Asking}}

\example{boolean msghandler_Asking(msghandler)

struct msghandler *msghandler;} 


\leftindent{\bold{Method description.  }  \italic{msghandler_Asking} finds out 
if a question is being asked in a view. 


\bold{Return value.}  Boolean:  True if there is a question being asked. 


\bold{Usage.}  You should call this procedure to check if there is a 
possibility that another question is already up when a message is to be 
displayed, so there would be no conflict between messages. 

}

\enddata{text,269735500}
