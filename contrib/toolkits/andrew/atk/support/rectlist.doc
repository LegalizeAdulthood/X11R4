\begindata{text,271660932}
\textdsversion{12}
\template{be2guide}
\define{bold
menu:[Font~1,Bold~10]
attr:[FontFace Bold Int Set]}
\define{section
menu:[Title~3,Section~21]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 14]}
\define{underline
menu:[Font~1,Underline~41]
attr:[Flags Underline Int Set]}
\define{index
menu:[Title,Index~91]
attr:[FontFace Italic Int Set]}
\define{indexi
menu:[Title,InvisibleIndex~92]
attr:[Script PreviousScriptMovement Point -2]
attr:[Flags Hidden Int Set]
attr:[FontFace Italic Int Set]}
\define{fixedtext
menu:[Region~4,Fixedtext]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fixedindent
menu:[Region~4,Fixedindent]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{paramname
menu:[Font~1,Paramname]
attr:[FontFace Italic Int Set]}
\formatnote{\chapter{Rectangle List}}\indexi{Rectangle list class}


A rectangle list is a list of all rectangles in a view that are slated to 
perform an operation or respond to an operation.  The class \italic{rectlist 
}provides class procedures for creating and modifying these lists.  Rectangle 
lists are most useful in drawing selection boxes in a view.  The rectangle 
list can be divided into two lists, depending on whether a rectangle has been 
displayed already or not.  An "old" list contains all the currently 
highlighted selection boxes, and a "new" list contains selection boxes that 
want to become visible in the future.  By manipulating the old and new 
rectangle lists, the application programmer can create a sequence of selection 
region displays. 



\section{Quick reference list for Rectlist}



\fixedtext{void \bold{rectlist_}AddNewRectangle }\fixedindent{(long 
\paramname{bottom}, long \paramname{top}, long \paramname{left}, long 
\paramname{right}, long \paramname{startScan});} 

\fixedtext{void \bold{rectlist_}AddOldRectangle }\fixedindent{(long 
\paramname{bottom}, long \paramname{top}, long \paramname{left}, long 
\paramname{right});} 

\fixedtext{void \bold{rectlist_}InvertRectangles }\fixedindent{(struct graphic 
*\paramname{gPtr});} 

\fixedtext{void \bold{rectlist_}ResetList }\fixedindent{();} 




\paragraph{Creating an instance of a rectangle list} 
\indexi{ \italic{rectlist_New}}

\example{struct rectlist_New(rectlist)

struct rectlist *(rectlist);} 


\leftindent{\bold{Class procedure description.  }  \italic{rectlist_New} 
creates a new instance of a rectangle list. 


\bold{Return value.}  A pointer to the newly created instance. }



\paragraph{Resetting a rectangle list} \indexi{ \italic{rectlist_ResetList}}

\example{void rectlist_ResetList()

}
\leftindent{\bold{Method description.  }  \italic{rectlist_ResetList} clears a 
rectangle list. 


\bold{Usage.}  You can use this procedure to clear out a rectangle list if you 
no longer need the list or if you want to start a new list. }



\paragraph{Adding a rectangle to the old list} 
\indexi{ \italic{rectlist_AddOldRectangle}}

\example{void rectlist_AddOldRectangle(bottom, top, left, right)

long bottom, top, left, right; }


\leftindent{\bold{Method description.  }  \italic{rectlist_AddOldRectangle} 
adds a rectangle to the old list. 


\bold{Usage.}  After a rectangle is displayed, it should be added to the old 
list with a call to this procedure. }

\begindata{bp,271833688}
\enddata{bp,271833688}
\view{bpv,271833688,237,0,0}
\paragraph{Adding a  rectangle to the new list} 
\indexi{ \italic{rectlist_AddNewRectangle}}

\example{void rectlist_AddNewRectangle(bottom, top, left, right,

startscan) 

long bottom, top, left, right, startscan; }


\leftindent{\bold{Method description. }\italic{rectlist_AddNewRectangle} adds 
a rectangle to the new list so that it will be displayed, then intersects the 
new list  with elements in the old list. 


\bold{Usage.}  If startscan is -1, the intersection with the old list is not 
performed; otherwise startscan gives the location in the old list to start 
performing the intersection. 

}


\paragraph{Inverting the rectangles in the list} 
\indexi{ \italic{rectlist_InvertRectangles}}

\example{void rectlist_InvertRectangles(gPtr)

struct graphic *gPtr;} 


\leftindent{\bold{Method description.  }  \italic{rectlist_InvertRectangles} 
inverts the rectangles in the rectangle list. 


\bold{Usage.}  This procedure would be used to change the display from 
black-on-white to white-on-black and vice versa. }


\enddata{text,271660932}
