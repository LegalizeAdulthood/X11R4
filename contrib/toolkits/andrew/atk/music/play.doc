\begindata{text,269790796}
\textdsversion{12}
\template{default}
\define{italic
menu:[Font~1,Italic~11]
attr:[FontFace Italic Int Set]}
\define{bold
menu:[Font~1,Bold~10]
attr:[FontFace Bold Int Set]}
\define{chapter
menu:[Title~3,Chapter~20]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 16]}
\define{section
menu:[Title~3,Section~21]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 14]}
\define{paragraph
menu:[Title~3,Paragraph~23]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 12]}
\define{majorheading
menu:[Title~3,MajorHeading~10]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Italic Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 12]}
\define{formatnote
menu:[Region~4,FormatNote~60]
attr:[Flags PassThru Int Set]
attr:[Flags NoFill Int Set]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]}
\define{fixedtext
menu:[Region~4,Fixedtext]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fixedindent
menu:[Region~4,Fixedindent]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fieldheading
menu:[Region~4,Fieldheading]
attr:[Justification LeftJustified Point 0]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fieldtext
menu:[Region~4,Fieldtext]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{paramname
menu:[Font~1,Paramname]
attr:[FontFace Italic Int Set]}
\formatnote{\chapter{play}}


Play is a "package" that provides an interface for playing notes and tones on 
an IBM/RT/PC keyboard.  On other hardware, it does nothing, gracefully.   Play 
can be utilized via the class procedure calls defined below and also via its 
proctable entries as defined in the help file which can be accessed under the 
name \italic{playproc}  (/usr/andrew/help/musproc.help).  The proctable 
entries can be called from Ness scripts and programs.


This document was authored by Wilfred J. Hansen.



\section{\italic{play} functions}


The following classprocedures are defined for 'play'.  For details, see a 
subseuent section.


	InitializeClass() returns boolean;

	Volume(long v);

	Retard(long v);

	Tuning(unsigned char *name);

	Tone(double freq, long duration, long volume);

	Notes(unsigned char *s);



\section{play proctable functions}


The following proctable functions are defined.  For details see 
/usr/andrew/help/musproc.help.


\bold{play_notes}(code string) 

\bold{play_tone}(freq, duration)  

\bold{play_volume}(vol)  

\bold{play_retard}(slow)  

\bold{play_tuning}(letter)  

\begindata{bp,270392440}
\enddata{bp,270392440}
\view{bpv,270392440,4,0,0}
______________________________________________________				


\paragraph{play_InitializeClass}

				

\majorheading{Function description}

______________________________________________________


\fixedtext{boolean \bold{play_InitializeClass }(}\fixedindent{);}


\fieldheading{Category}

\fieldtext{Classprocedure}


\fieldheading{Description}   

\fieldtext{Initializes the package, setting initial values for the volume and 
tuning.\fieldtext{ }  Adds entries to the proctable.}\fieldtext{

}
\fieldheading{Return Value}

\fieldtext{Always returns True.}


\fieldheading{Usage}

\fieldtext{This procedure is called automatically.  It is never called by 
client code.}

\view{bpv,270392440,5,0,0}
______________________________________________________				


\paragraph{play_Notes}

				

\majorheading{Function description}

______________________________________________________


\fixedtext{void \bold{play_Notes }(}\fixedindent{unsigned char 
*\paramname{s});}


\fieldheading{Category}

\fieldtext{Classprocedure}


\fieldheading{Description}   

\fieldtext{play_notes plays a sequence of notes on the RT keyboard.  The 
string s encodes the notes as shown in /usr/andrew/help/musproc.help.}


\fieldheading{Known Bugs}

\fieldtext{Execution is halted until all notes of the string have been placed 
in the buffer for the keyboard.  This buffer holds only five notes, so nothing 
further will happen in the program until near the end of the string.  One way 
around this fact is to split a song into a sequence of play_notes actions and 
do other processing in between.

}
\fieldheading{Example}\fieldtext{

	play_notes("L8 CC 	L4 DC	FE P4");

	play_notes("L8 CC 	L4 DC	GF P4");

	play_notes("L8 CC 	L4 >C <A  	FED P4");

	play_notes("L8 A#A# 	L4 AF 	GF.") ;	/* (the final dot doubles the duration) 
*/

}\
\view{bpv,270392440,6,0,0}
______________________________________________________				


\paragraph{play_Retard}

				

\majorheading{Function description}

______________________________________________________


\fixedtext{void \bold{play_Retard }(}\fixedindent{long \paramname{v});}


\fieldheading{Category}

\fieldtext{Classprocedure}


\fieldheading{Description}   \fieldtext{

Sets the global retardation  (-30<=slow<=40).   Note lengths are mutliplied by 
(1+slow/50).  Default is 0.}


\fieldheading{Usage}

\fieldtext{This function can be utilized to speed up or slow down a piece of 
music with changing the tempo or duration codes within the piece.  In general 
the initial author of a piece of music script should avoid play_Retard in 
favor of utilizing the tempo code Tx in the play_notes argument.  Then 
 subsequent authors can adjust the overall speed without digging inside the 
music itself.

}\
\view{bpv,270392440,7,0,0}
______________________________________________________				


\paragraph{play_Tone}

				

\majorheading{Function description}

______________________________________________________


\fixedtext{void \bold{play_Tone }(}\fixedindent{double \paramname{freq},

long \paramname{duration},

long \paramname{volume});}


\fieldheading{Category}

\fieldtext{Classprocedure}


\fieldheading{Description}   

\fieldtext{Plays a tone of the given frequency for the given duration.  'freq' 
is a double float value;  use 0.0 for a rest;  reasonable frequencies on the 
RT/PC keyboard range from roughly  80.0 to 4000.0.  'Duration' is an integer 
and is interpreted as the number of 128'ths of a second.  If the duration is 
given as more than ten seconds, it is arbitrarily set to five seconds. 
  'Volume' is defined as for play_Volume.}

\view{bpv,270392440,8,0,0}
______________________________________________________				


\paragraph{play_Tuning}

				

\majorheading{Function description}

______________________________________________________


\fixedtext{void \bold{play_Tuning }(}\fixedindent{unsigned char 
*\paramname{name});}


\fieldheading{Category}

\fieldtext{Classprocedure}


\fieldheading{Description}   

\fieldtext{Chooses one of the available tunings:  EqualTemper, MeanTone, 
JustIntonation, Pythagorean. The 'letter' must be a string constant giving the 
first letter of the tuning name.  The default is "E", but MeanTone is the more 
usually used.

}
\fieldheading{Details}


\fieldtext{The tuning defines the ratios among the twleve notes in an octave. 
 There is no good way to set these ratios so all reasonable intervals sound 
well, so each of the tunings is a compromise of one sort or another.  


A tuning is defined by giving the number of "cent"s for the ratio of each 
interval in an octave, where a cent is the 1200'th root of 2.  The number of 
cents must add to 1200 so the octave itself will be an exact doubling of the 
frequency.  For the four tunings, the ratios in cents are:


Pythagorean

	90, 114, 90, 90, 114, 90, 114, 90, 114, 90, 90, 114

 

Just Intonation  /* also called Ptolmeaic */

	112, 92, 112, 90, 92, 112, 92, 112, 92, 90, 112, 92


Mean Tone    /* sum is 1199.  octaves are shorter */

	117, 76, 117, 117, 76, 117, 76, 117, 76, 117, 117, 76


Equal Temper

	100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100

}
\fieldheading{Known Bugs}

\fieldtext{Your humble scribe cannot tell the difference between these four 
modes.}

\view{bpv,270392440,9,0,0}
______________________________________________________				


\paragraph{play_Volume}

				

\majorheading{Function description}

______________________________________________________


\fixedtext{void \bold{play_Volume }(}\fixedindent{long \paramname{v});}


\fieldheading{Category}

\fieldtext{Classprocedure}


\fieldheading{Description}   

\fieldtext{Sets the volume to v  (0<= v <= 9).  Default is 3 for the softest 
audible volume;  which is still pretty loud.}


\fieldheading{Known Bugs}

\fieldtext{The RT supports only three levels of audible volume and one of 
silence.  There is a mapping which combines the global volume set by 
play_Volume and the volume given with play_notes/play_tone.}




\enddata{text,269790796}
