\begindata{text,269224400}
\textdsversion{12}
\template{default}
\define{bold
menu:[Font~1,Bold~10]
attr:[FontFace Bold Int Set]}
\define{section
menu:[Title~3,Section~21]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 14]}
\define{fixedtext
menu:[Region~4,Fixedtext]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fixedindent
menu:[Region~4,Fixedindent]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{paramname
menu:[Font~1,Paramname]
attr:[FontFace Italic Int Set]}
\chapter{Fad}


This document is intended to contain the programmer's guide to fad.  There are 
no short-term plans for completing this document.  Some information on fad may 
be found in the help file fad.help.



\section{Quick reference list for }fad



\fixedtext{void \bold{fad_}delvector }\fixedindent{(struct fad 
*\paramname{fad}, struct fad_frame *\paramname{f});} 

\fixedtext{void \bold{fad_}FinalizeObject }\fixedindent{(struct fad 
*\paramname{self});} 

\fixedtext{int \bold{fad_}flipicons }\fixedindent{(struct fad 
*\paramname{fad});} 

\fixedtext{void \bold{fad_}freeframe }\fixedindent{(struct fad 
*\paramname{fad}, struct fad_frame *\paramname{ff});} 

\fixedtext{short \bold{fad_}iconnum }\fixedindent{(struct fad 
*\paramname{fad}, char *\paramname{s});} 

\fixedtext{boolean \bold{fad_}InitializeObject }\fixedindent{(struct fad 
*\paramname{self});} 

\fixedtext{struct fad_frame *\bold{fad_}newframe }\fixedindent{(struct fad 
*\paramname{fad});} 

\fixedtext{struct fadpoint *\bold{fad_}newpoint }\fixedindent{(struct fad 
*\paramname{fad}, long \paramname{x}, long \paramname{y});} 

\fixedtext{long \bold{fad_}Read }\fixedindent{(struct fad *\paramname{fad}, 
FILE *\paramname{f}, long \paramname{id});} 

\fixedtext{void \bold{fad_}SetAttributes }\fixedindent{(struct fad 
*\paramname{fad}, struct attributes *\paramname{attributes});} 

\fixedtext{void \bold{fad_}SetName }\fixedindent{(struct fad *\paramname{fad}, 
char *\paramname{name});} 

\fixedtext{struct fadpoint *\bold{fad_}setpoint }\fixedindent{(struct fad 
*\paramname{fad}, long \paramname{x}, long \paramname{y}, int 
\paramname{type}, struct fad_frame *\paramname{f});} 

\fixedtext{void \bold{fad_}SetReadOnly }\fixedindent{(struct fad 
*\paramname{fad}, boolean \paramname{readOnly});} 

\fixedtext{struct vector *\bold{fad_}setvector }\fixedindent{(struct fad 
*\paramname{fad}, struct fadpoint *\paramname{pp1}, struct fadpoint 
*\paramname{pp2}, struct fad_frame *\paramname{f});} 

\fixedtext{int \bold{fad_}unflipicons }\fixedindent{(struct fad 
*\paramname{fad});} 

\fixedtext{long \bold{fad_}Write }\fixedindent{(struct fad *\paramname{fad}, 
FILE *\paramname{f}, long \paramname{writeid}, int \paramname{level});} 




\section{Quick reference list for }fadview



\fixedtext{void \bold{fadview_}aniframe }\fixedindent{(struct fadview 
*\paramname{fadview}, int \paramname{framecount}, int \paramname{startat}, int 
\paramname{gofor}, int \paramname{mtm});} 

\fixedtext{enum view_DSattributes \bold{fadview_}DesiredSize 
}\fixedindent{(struct fadview *\paramname{fadview}, long \paramname{width}, 
long \paramname{height}, enum view_DSpass \paramname{pass}, long 
*\paramname{dWidth}, long *\paramname{dheight});} 

\fixedtext{void \bold{fadview_}fileread }\fixedindent{(struct fadview 
*\paramname{fadview}, char *\paramname{fnm});} 

\fixedtext{void \bold{fadview_}FullUpdate }\fixedindent{(struct fadview 
*\paramname{fadview}, enum view_UpdateType \paramname{type}, long 
\paramname{left}, long \paramname{top}, long \paramname{width}, long 
\paramname{right});} 

\fixedtext{int \bold{fadview_}geticons }\fixedindent{(struct fadview 
*\paramname{fadview}, char *\paramname{s});} 

\fixedtext{struct fadview *\bold{fadview_}Hit }\fixedindent{(struct fadview 
*\paramname{fadview}, enum view_MouseAction \paramname{action}, long 
\paramname{mousex}, long \paramname{mousey}, long \paramname{numberOfClicks});} 



\fixedtext{boolean \bold{fadview_}InitializeClass }\fixedindent{();} 

\fixedtext{boolean \bold{fadview_}InitializeObject }\fixedindent{(struct 
fadview *\paramname{self});} 

\fixedtext{void \bold{fadview_}lastframe }\fixedindent{(struct fadview 
*\paramname{fadview}, struct fad *\paramname{cp});} 

\fixedtext{void \bold{fadview_}LoseInputFocus }\fixedindent{(struct fadview 
*\paramname{fadview});} 

\fixedtext{void \bold{fadview_}nextframe }\fixedindent{(struct fadview 
*\paramname{fadview}, struct fad *\paramname{cp});} 

\fixedtext{void \bold{fadview_}ObservedChanged }\fixedindent{(struct fadview 
*\paramname{fadview}, struct observable *\paramname{changed}, long 
\paramname{value});} 

\fixedtext{void \bold{fadview_}Print }\fixedindent{(struct fadview 
*\paramname{fadview}, FILE *\paramname{file}, char *\paramname{processor}, 
char *\paramname{finalFormat}, boolean \paramname{topLevel});} 

\fixedtext{void \bold{fadview_}ReceiveInputFocus }\fixedindent{(struct fadview 
*\paramname{fadview});} 

\fixedtext{void \bold{fadview_}SetDataObject }\fixedindent{(struct fadview 
*\paramname{fadview}, struct dataobject *\paramname{dataObject});} 

\fixedtext{void \bold{fadview_}showfad }\fixedindent{(struct fadview 
*\paramname{fadview}, int \paramname{i}, struct fad *\paramname{cp});} 

\fixedtext{void \bold{fadview_}Update }\fixedindent{(struct fadview 
*\paramname{fadview});} \
\enddata{text,269224400}
